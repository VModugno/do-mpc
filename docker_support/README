This docker image is based on a official Ubuntu 20.04 docker image [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/] and is intended to run applications dompc application that uses the fork https://github.com/VModugno/do-mpc.git.
To build this image:
1)install docker on your host machine
2)if you want simply to test the current version of the code you can skip 3) (that is intended to run a version of the code in the host)
3)
create a directory <MYDIR> to host the needed file and directories
copy in <MYDIR> this file (README), the Dockerfile, the entrypoint.sh script, the run_amr_dompc.sh script and the dev_run_amr_dompc.sh script inside it
create in MYDIR a directory to host a copy of the code:
         amr_dompc_repo (to host the do_mpc library code)
clone the do_mpc code in amr_dompc_repo 
4)from MYDIR run the image building command: 
   docker build -t amr_dompc:latest .

to verify that the image has been properly built run the 'docker images' command
the result should be something like that

REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
amr_dompc          latest              bb22f56c90ec        2 hours ago         816MB
ubuntu              20.04               f643c72bc252        7 weeks ago         72.9MB

Troubleshooting:
You may be required to add your user in the docker group, 'sudo usermod -a -G docker $USER' than reboot the machine and verify that your user is in the docker gruop with the 'groups' command.

Once the amr_do_mpc is built:
5.a)use the run_amr_do_mpc.sh script (with no parameters) to run the container: with this script you are going to test the version of the repo that is cloned in the image when the image has been built
5.b)or use one of the following command to test a version of the code in the host (previously created as described in 3):
   run_amr_do_mpc.sh hostrepo
   dev_run_amr_dompc.sh (that simply run the previous command avoiding to insert params)
the result of both those commands is that a  local copy of the code in amr_dompc_repo is mounted in the container in /workdir/amr_dompc (where the code of the library is cloned when the image is created) 
in RW mode and shadows the version cloned during the image building process

6)Test that everything is ok running one of the examples in /workdir/amr_dompc/do-mpc/examples.
